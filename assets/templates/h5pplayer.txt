<!doctype html>
<html class="h5p-iframe">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale={0}">
    <base target="_parent">

    {1}

    <style>
        /* Package Frame Styles */
        .h5p-iframe {
            overflow-y: scroll;
        }

        .h5p-container:not(.h5p-interactive-book) {
            padding: 1rem 0.5rem;
        }

        /* Small devices (landscape phones, 576px and up) */
        @media (min-width: 576px) {
            .h5p-container:not(.h5p-interactive-book) {
                padding: 1rem 1.5rem;
            }
        }
    </style>

    {2}

    <script src="player/h5p-stub.js"></script>

    <script>
        window.H5PIntegration = {3};

        /* *** H5P Stub *** */
        class SoundJS_Proxy {
            _mapSounds = new Map();
            constructor() {
            }
            initializeDefaultPlugins() {
                return true;
            }
            registerSound(filepath, key) {
                // Grigory. Since each package opened by H5P is deployed in a separate "iframe", 
                // the "iframe.contentWindow" property will contain one global ActivePackage 
                // object(which sets ActivePackage itself in its constructor).
                const pack = window.ActivePackage;
                if (pack) {
                    // Here we assume that filepath starts with "library token".
                    const nIndex = filepath.indexOf("/");
                    if (nIndex > 0) {
                        const token = filepath.substring(0, nIndex);
                        filepath = filepath.substring(nIndex + 1);
                        const lib = pack.getActiveLibrary(token);
                        if (lib) {
                            const objurl = lib.getObjectURL(filepath);
                            if (objurl) {
                                this._mapSounds.set(key, new Audio(objurl));
                            }
                        }
                    }
                }
            }
            get INTERRUPT_NONE() {
                return "none";
            }
            play(type, unkprm1, delay) {
                const audio = this._mapSounds.get(type);
                if (audio) {
                    if (delay > 0) {
                        setTimeout((player) => {
                            player.play();
                        }, delay, audio);
                    }
                    else {
                        audio.play();
                    }
                }
            }
        } // class SoundJS_Proxy

        if (window.H5P.SoundJS) {
            window.H5P.SoundJS = new SoundJS_Proxy();
        }
    </script>
</head>

<body>
    <div class="h5p-content" data-content-id="{4}"></div>
</body>

</html>